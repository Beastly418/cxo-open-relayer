// SPDX-License-Identifier: BSL 1.1

pragma solidity ^0.8.0;


interface ITokenDistAPI {


    /*
    *  @dev return latest distribution, we store it but we just use the autogenerated getter for that
    */
    function getDistribution() external view returns (uint[][] memory);

    /*
    *  @dev returns an array of uint256s which is the last X elements in the array.
    *  @param _id which array are we pulling the data from
    *  @param _numEntries how many data entries are we pulling, going backwards
    */
    function getEntries(uint _id, uint _numEntries) external view returns(uint[][] memory);


    /*
    *  @dev stores the latest distribution data
    *  @param _distribution array of struct {string:name, uint:amt} that we are pushing onto the end of our historical data
    */
    function pushDistribution(uint[][] memory _distribution) external;

    /*
    *  @dev replaces historical distribution data
    *  @param _id which distribution struct we want to update in the array
    *  @param _distribution struct of {string:name, uint:amt} that we are replacing at the chose id
    */
    function updateDistribution(uint _id, uint[][] memory _distribution) external;

}